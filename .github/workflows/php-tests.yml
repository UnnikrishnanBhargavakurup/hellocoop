name: PHP Tests

on:
  push:
    paths:
      - 'src/**'
      - 'tests/**'
      - 'composer.json'
      - 'composer.lock'
      - 'phpunit.xml'
      - 'phpunit.xml.dist'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'src/**'
      - 'tests/**'
      - 'composer.json'
      - 'composer.lock'
      - 'phpunit.xml'
      - 'phpunit.xml.dist'
      - '.github/workflows/**'

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  coding-standards:
    name: "Coding standards"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v4"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "latest"
          coverage: "none"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@v3"

      - name: "Check syntax (php-parallel-lint)"
        run: "composer lint src tests --colors"

      - name: "Check coding standards (PHP_CodeSniffer)"
        run: "composer phpcs src tests --colors"

  static-analysis:
    name: "Static analysis"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v4"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "8.3"
          coverage: "none"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@v3"

      - name: "Statically analyze code (PHPStan)"
        run: "composer phpstan src tests -- --ansi"

      - name: "Statically analyze code (Psalm)"
        run: "composer psalm -- --shepherd"

  tests:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4' # Specify the PHP version
          extensions: mbstring, pdo, json, tokenizer, xml # Add required PHP extensions
          coverage: xdebug # Enable Xdebug for code coverage


      # Install Composer dependencies
      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      # Run Tests
      - name: Run tests and collect coverage
        run: ./vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
